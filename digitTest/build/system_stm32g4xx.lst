ARM GAS  /tmp/ccipKmXI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32g4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemInit:
  26              	.LFB132:
  27              		.file 1 "Core/Src/system_stm32g4xx.c"
   1:Core/Src/system_stm32g4xx.c **** /**
   2:Core/Src/system_stm32g4xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32g4xx.c ****   * @file    system_stm32g4xx.c
   4:Core/Src/system_stm32g4xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32g4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32g4xx.c ****   *
   7:Core/Src/system_stm32g4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32g4xx.c ****   *   user application:
   9:Core/Src/system_stm32g4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32g4xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32g4xx.c ****   *                      the "startup_stm32g4xx.s" file.
  12:Core/Src/system_stm32g4xx.c ****   *
  13:Core/Src/system_stm32g4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32g4xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32g4xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32g4xx.c ****   *
  17:Core/Src/system_stm32g4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32g4xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32g4xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32g4xx.c ****   *
  21:Core/Src/system_stm32g4xx.c ****   *   After each device reset the HSI (16 MHz) is used as system clock source.
  22:Core/Src/system_stm32g4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32g4xx.s" file, to
  23:Core/Src/system_stm32g4xx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32g4xx.c ****   *
  25:Core/Src/system_stm32g4xx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32g4xx.c ****   *=============================================================================
  27:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32g4xx.c ****   *        System Clock source                    | HSI
  29:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  30:Core/Src/system_stm32g4xx.c ****   *        SYSCLK(Hz)                             | 16000000
  31:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  /tmp/ccipKmXI.s 			page 2


  32:Core/Src/system_stm32g4xx.c ****   *        HCLK(Hz)                               | 16000000
  33:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32g4xx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32g4xx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32g4xx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32g4xx.c ****   *        PLL_M                                  | 1
  41:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32g4xx.c ****   *        PLL_N                                  | 16
  43:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32g4xx.c ****   *        PLL_P                                  | 7
  45:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32g4xx.c ****   *        PLL_Q                                  | 2
  47:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32g4xx.c ****   *        PLL_R                                  | 2
  49:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32g4xx.c ****   *        Require 48MHz for RNG                  | Disabled
  51:Core/Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32g4xx.c ****   *=============================================================================
  53:Core/Src/system_stm32g4xx.c ****   ******************************************************************************
  54:Core/Src/system_stm32g4xx.c ****   * @attention
  55:Core/Src/system_stm32g4xx.c ****   *
  56:Core/Src/system_stm32g4xx.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  57:Core/Src/system_stm32g4xx.c ****   * All rights reserved.</center></h2>
  58:Core/Src/system_stm32g4xx.c ****   *
  59:Core/Src/system_stm32g4xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  60:Core/Src/system_stm32g4xx.c ****   * the "License"; You may not use this file except in compliance with the
  61:Core/Src/system_stm32g4xx.c ****   * License. You may obtain a copy of the License at:
  62:Core/Src/system_stm32g4xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  63:Core/Src/system_stm32g4xx.c ****   *
  64:Core/Src/system_stm32g4xx.c ****   ******************************************************************************
  65:Core/Src/system_stm32g4xx.c ****   */
  66:Core/Src/system_stm32g4xx.c **** 
  67:Core/Src/system_stm32g4xx.c **** /** @addtogroup CMSIS
  68:Core/Src/system_stm32g4xx.c ****   * @{
  69:Core/Src/system_stm32g4xx.c ****   */
  70:Core/Src/system_stm32g4xx.c **** 
  71:Core/Src/system_stm32g4xx.c **** /** @addtogroup stm32g4xx_system
  72:Core/Src/system_stm32g4xx.c ****   * @{
  73:Core/Src/system_stm32g4xx.c ****   */
  74:Core/Src/system_stm32g4xx.c **** 
  75:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Includes
  76:Core/Src/system_stm32g4xx.c ****   * @{
  77:Core/Src/system_stm32g4xx.c ****   */
  78:Core/Src/system_stm32g4xx.c **** 
  79:Core/Src/system_stm32g4xx.c **** #include "stm32g4xx.h"
  80:Core/Src/system_stm32g4xx.c **** 
  81:Core/Src/system_stm32g4xx.c **** #if !defined  (HSE_VALUE)
  82:Core/Src/system_stm32g4xx.c ****   #define HSE_VALUE     24000000U /*!< Value of the External oscillator in Hz */
  83:Core/Src/system_stm32g4xx.c **** #endif /* HSE_VALUE */
  84:Core/Src/system_stm32g4xx.c **** 
  85:Core/Src/system_stm32g4xx.c **** #if !defined  (HSI_VALUE)
  86:Core/Src/system_stm32g4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
  87:Core/Src/system_stm32g4xx.c **** #endif /* HSI_VALUE */
  88:Core/Src/system_stm32g4xx.c **** 
ARM GAS  /tmp/ccipKmXI.s 			page 3


  89:Core/Src/system_stm32g4xx.c **** /**
  90:Core/Src/system_stm32g4xx.c ****   * @}
  91:Core/Src/system_stm32g4xx.c ****   */
  92:Core/Src/system_stm32g4xx.c **** 
  93:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_TypesDefinitions
  94:Core/Src/system_stm32g4xx.c ****   * @{
  95:Core/Src/system_stm32g4xx.c ****   */
  96:Core/Src/system_stm32g4xx.c **** 
  97:Core/Src/system_stm32g4xx.c **** /**
  98:Core/Src/system_stm32g4xx.c ****   * @}
  99:Core/Src/system_stm32g4xx.c ****   */
 100:Core/Src/system_stm32g4xx.c **** 
 101:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Defines
 102:Core/Src/system_stm32g4xx.c ****   * @{
 103:Core/Src/system_stm32g4xx.c ****   */
 104:Core/Src/system_stm32g4xx.c **** 
 105:Core/Src/system_stm32g4xx.c **** /************************* Miscellaneous Configuration ************************/
 106:Core/Src/system_stm32g4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 107:Core/Src/system_stm32g4xx.c ****      Internal SRAM. */
 108:Core/Src/system_stm32g4xx.c **** /* #define VECT_TAB_SRAM */
 109:Core/Src/system_stm32g4xx.c **** #define VECT_TAB_OFFSET  0x00UL /*!< Vector Table base offset field.
 110:Core/Src/system_stm32g4xx.c ****                                    This value must be a multiple of 0x200. */
 111:Core/Src/system_stm32g4xx.c **** /******************************************************************************/
 112:Core/Src/system_stm32g4xx.c **** /**
 113:Core/Src/system_stm32g4xx.c ****   * @}
 114:Core/Src/system_stm32g4xx.c ****   */
 115:Core/Src/system_stm32g4xx.c **** 
 116:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Macros
 117:Core/Src/system_stm32g4xx.c ****   * @{
 118:Core/Src/system_stm32g4xx.c ****   */
 119:Core/Src/system_stm32g4xx.c **** 
 120:Core/Src/system_stm32g4xx.c **** /**
 121:Core/Src/system_stm32g4xx.c ****   * @}
 122:Core/Src/system_stm32g4xx.c ****   */
 123:Core/Src/system_stm32g4xx.c **** 
 124:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Variables
 125:Core/Src/system_stm32g4xx.c ****   * @{
 126:Core/Src/system_stm32g4xx.c ****   */
 127:Core/Src/system_stm32g4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 128:Core/Src/system_stm32g4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 129:Core/Src/system_stm32g4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 130:Core/Src/system_stm32g4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 131:Core/Src/system_stm32g4xx.c ****          Note: If you use this function to configure the system clock; then there
 132:Core/Src/system_stm32g4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 133:Core/Src/system_stm32g4xx.c ****                variable is updated automatically.
 134:Core/Src/system_stm32g4xx.c ****   */
 135:Core/Src/system_stm32g4xx.c ****   uint32_t SystemCoreClock = HSI_VALUE;
 136:Core/Src/system_stm32g4xx.c **** 
 137:Core/Src/system_stm32g4xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 138:Core/Src/system_stm32g4xx.c ****   const uint8_t APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 139:Core/Src/system_stm32g4xx.c **** 
 140:Core/Src/system_stm32g4xx.c **** /**
 141:Core/Src/system_stm32g4xx.c ****   * @}
 142:Core/Src/system_stm32g4xx.c ****   */
 143:Core/Src/system_stm32g4xx.c **** 
 144:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_FunctionPrototypes
 145:Core/Src/system_stm32g4xx.c ****   * @{
ARM GAS  /tmp/ccipKmXI.s 			page 4


 146:Core/Src/system_stm32g4xx.c ****   */
 147:Core/Src/system_stm32g4xx.c **** 
 148:Core/Src/system_stm32g4xx.c **** /**
 149:Core/Src/system_stm32g4xx.c ****   * @}
 150:Core/Src/system_stm32g4xx.c ****   */
 151:Core/Src/system_stm32g4xx.c **** 
 152:Core/Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Functions
 153:Core/Src/system_stm32g4xx.c ****   * @{
 154:Core/Src/system_stm32g4xx.c ****   */
 155:Core/Src/system_stm32g4xx.c **** 
 156:Core/Src/system_stm32g4xx.c **** /**
 157:Core/Src/system_stm32g4xx.c ****   * @brief  Setup the microcontroller system.
 158:Core/Src/system_stm32g4xx.c ****   * @param  None
 159:Core/Src/system_stm32g4xx.c ****   * @retval None
 160:Core/Src/system_stm32g4xx.c ****   */
 161:Core/Src/system_stm32g4xx.c **** 
 162:Core/Src/system_stm32g4xx.c **** void SystemInit(void)
 163:Core/Src/system_stm32g4xx.c **** {
  28              		.loc 1 163 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 164:Core/Src/system_stm32g4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 165:Core/Src/system_stm32g4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 166:Core/Src/system_stm32g4xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 166 0
  34 0000 054B     		ldr	r3, .L2
  35 0002 D3F88820 		ldr	r2, [r3, #136]
  36 0006 42F47002 		orr	r2, r2, #15728640
  37 000a C3F88820 		str	r2, [r3, #136]
 167:Core/Src/system_stm32g4xx.c ****   #endif
 168:Core/Src/system_stm32g4xx.c **** 
 169:Core/Src/system_stm32g4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 170:Core/Src/system_stm32g4xx.c **** #ifdef VECT_TAB_SRAM
 171:Core/Src/system_stm32g4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 172:Core/Src/system_stm32g4xx.c **** #else
 173:Core/Src/system_stm32g4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  38              		.loc 1 173 0
  39 000e 4FF00062 		mov	r2, #134217728
  40 0012 9A60     		str	r2, [r3, #8]
  41 0014 7047     		bx	lr
  42              	.L3:
  43 0016 00BF     		.align	2
  44              	.L2:
  45 0018 00ED00E0 		.word	-536810240
  46              		.cfi_endproc
  47              	.LFE132:
  49              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  50              		.align	1
  51              		.global	SystemCoreClockUpdate
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	SystemCoreClockUpdate:
  58              	.LFB133:
ARM GAS  /tmp/ccipKmXI.s 			page 5


 174:Core/Src/system_stm32g4xx.c **** #endif
 175:Core/Src/system_stm32g4xx.c **** }
 176:Core/Src/system_stm32g4xx.c **** 
 177:Core/Src/system_stm32g4xx.c **** /**
 178:Core/Src/system_stm32g4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 179:Core/Src/system_stm32g4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 180:Core/Src/system_stm32g4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 181:Core/Src/system_stm32g4xx.c ****   *         other parameters.
 182:Core/Src/system_stm32g4xx.c ****   *
 183:Core/Src/system_stm32g4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 184:Core/Src/system_stm32g4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 185:Core/Src/system_stm32g4xx.c ****   *         based on this variable will be incorrect.
 186:Core/Src/system_stm32g4xx.c ****   *
 187:Core/Src/system_stm32g4xx.c ****   * @note   - The system frequency computed by this function is not the real
 188:Core/Src/system_stm32g4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 189:Core/Src/system_stm32g4xx.c ****   *           constant and the selected clock source:
 190:Core/Src/system_stm32g4xx.c ****   *
 191:Core/Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 192:Core/Src/system_stm32g4xx.c ****   *
 193:Core/Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 194:Core/Src/system_stm32g4xx.c ****   *
 195:Core/Src/system_stm32g4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 196:Core/Src/system_stm32g4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 197:Core/Src/system_stm32g4xx.c ****   *
 198:Core/Src/system_stm32g4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 199:Core/Src/system_stm32g4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 200:Core/Src/system_stm32g4xx.c ****   *              in voltage and temperature.
 201:Core/Src/system_stm32g4xx.c ****   *
 202:Core/Src/system_stm32g4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 203:Core/Src/system_stm32g4xx.c ****   *              24 MHz), user has to ensure that HSE_VALUE is same as the real
 204:Core/Src/system_stm32g4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 205:Core/Src/system_stm32g4xx.c ****   *              have wrong result.
 206:Core/Src/system_stm32g4xx.c ****   *
 207:Core/Src/system_stm32g4xx.c ****   *         - The result of this function could be not correct when using fractional
 208:Core/Src/system_stm32g4xx.c ****   *           value for HSE crystal.
 209:Core/Src/system_stm32g4xx.c ****   *
 210:Core/Src/system_stm32g4xx.c ****   * @param  None
 211:Core/Src/system_stm32g4xx.c ****   * @retval None
 212:Core/Src/system_stm32g4xx.c ****   */
 213:Core/Src/system_stm32g4xx.c **** void SystemCoreClockUpdate(void)
 214:Core/Src/system_stm32g4xx.c **** {
  59              		.loc 1 214 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 215:Core/Src/system_stm32g4xx.c ****   uint32_t tmp, pllvco, pllr, pllsource, pllm;
 216:Core/Src/system_stm32g4xx.c **** 
 217:Core/Src/system_stm32g4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 218:Core/Src/system_stm32g4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  64              		.loc 1 218 0
  65 0000 1E4B     		ldr	r3, .L13
  66 0002 9B68     		ldr	r3, [r3, #8]
  67 0004 03F00C03 		and	r3, r3, #12
  68 0008 082B     		cmp	r3, #8
  69 000a 12D0     		beq	.L6
  70 000c 0C2B     		cmp	r3, #12
ARM GAS  /tmp/ccipKmXI.s 			page 6


  71 000e 14D0     		beq	.L7
  72 0010 042B     		cmp	r3, #4
  73 0012 0AD0     		beq	.L11
  74              	.L5:
 219:Core/Src/system_stm32g4xx.c ****   {
 220:Core/Src/system_stm32g4xx.c ****     case 0x04:  /* HSI used as system clock source */
 221:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = HSI_VALUE;
 222:Core/Src/system_stm32g4xx.c ****       break;
 223:Core/Src/system_stm32g4xx.c **** 
 224:Core/Src/system_stm32g4xx.c ****     case 0x08:  /* HSE used as system clock source */
 225:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = HSE_VALUE;
 226:Core/Src/system_stm32g4xx.c ****       break;
 227:Core/Src/system_stm32g4xx.c **** 
 228:Core/Src/system_stm32g4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 229:Core/Src/system_stm32g4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 230:Core/Src/system_stm32g4xx.c ****          SYSCLK = PLL_VCO / PLLR
 231:Core/Src/system_stm32g4xx.c ****          */
 232:Core/Src/system_stm32g4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 233:Core/Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 234:Core/Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 235:Core/Src/system_stm32g4xx.c ****       {
 236:Core/Src/system_stm32g4xx.c ****         pllvco = (HSI_VALUE / pllm);
 237:Core/Src/system_stm32g4xx.c ****       }
 238:Core/Src/system_stm32g4xx.c ****       else                   /* HSE used as PLL clock source */
 239:Core/Src/system_stm32g4xx.c ****       {
 240:Core/Src/system_stm32g4xx.c ****         pllvco = (HSE_VALUE / pllm);
 241:Core/Src/system_stm32g4xx.c ****       }
 242:Core/Src/system_stm32g4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8);
 243:Core/Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 244:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 245:Core/Src/system_stm32g4xx.c ****       break;
 246:Core/Src/system_stm32g4xx.c **** 
 247:Core/Src/system_stm32g4xx.c ****     default:
 248:Core/Src/system_stm32g4xx.c ****       break;
 249:Core/Src/system_stm32g4xx.c ****   }
 250:Core/Src/system_stm32g4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 251:Core/Src/system_stm32g4xx.c ****   /* Get HCLK prescaler */
 252:Core/Src/system_stm32g4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
  75              		.loc 1 252 0
  76 0014 194B     		ldr	r3, .L13
  77 0016 9B68     		ldr	r3, [r3, #8]
  78 0018 C3F30313 		ubfx	r3, r3, #4, #4
  79 001c 184A     		ldr	r2, .L13+4
  80 001e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
  81              	.LVL0:
 253:Core/Src/system_stm32g4xx.c ****   /* HCLK clock frequency */
 254:Core/Src/system_stm32g4xx.c ****   SystemCoreClock >>= tmp;
  82              		.loc 1 254 0
  83 0020 184A     		ldr	r2, .L13+8
  84 0022 1368     		ldr	r3, [r2]
  85 0024 CB40     		lsrs	r3, r3, r1
  86 0026 1360     		str	r3, [r2]
  87 0028 7047     		bx	lr
  88              	.LVL1:
  89              	.L11:
 221:Core/Src/system_stm32g4xx.c ****       break;
  90              		.loc 1 221 0
ARM GAS  /tmp/ccipKmXI.s 			page 7


  91 002a 174A     		ldr	r2, .L13+12
  92 002c 154B     		ldr	r3, .L13+8
  93 002e 1A60     		str	r2, [r3]
 222:Core/Src/system_stm32g4xx.c **** 
  94              		.loc 1 222 0
  95 0030 F0E7     		b	.L5
  96              	.L6:
 225:Core/Src/system_stm32g4xx.c ****       break;
  97              		.loc 1 225 0
  98 0032 164A     		ldr	r2, .L13+16
  99 0034 134B     		ldr	r3, .L13+8
 100 0036 1A60     		str	r2, [r3]
 226:Core/Src/system_stm32g4xx.c **** 
 101              		.loc 1 226 0
 102 0038 ECE7     		b	.L5
 103              	.L7:
 232:Core/Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 104              		.loc 1 232 0
 105 003a 104B     		ldr	r3, .L13
 106 003c DA68     		ldr	r2, [r3, #12]
 107 003e 02F00302 		and	r2, r2, #3
 108              	.LVL2:
 233:Core/Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 109              		.loc 1 233 0
 110 0042 DB68     		ldr	r3, [r3, #12]
 111 0044 C3F30313 		ubfx	r3, r3, #4, #4
 112 0048 0133     		adds	r3, r3, #1
 113              	.LVL3:
 234:Core/Src/system_stm32g4xx.c ****       {
 114              		.loc 1 234 0
 115 004a 022A     		cmp	r2, #2
 116 004c 12D0     		beq	.L12
 240:Core/Src/system_stm32g4xx.c ****       }
 117              		.loc 1 240 0
 118 004e 0F4A     		ldr	r2, .L13+16
 119              	.LVL4:
 120 0050 B2FBF3F2 		udiv	r2, r2, r3
 121              	.LVL5:
 122              	.L10:
 242:Core/Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 123              		.loc 1 242 0
 124 0054 0949     		ldr	r1, .L13
 125 0056 CB68     		ldr	r3, [r1, #12]
 126              	.LVL6:
 127 0058 C3F30623 		ubfx	r3, r3, #8, #7
 128 005c 03FB02F3 		mul	r3, r3, r2
 129              	.LVL7:
 243:Core/Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 130              		.loc 1 243 0
 131 0060 CA68     		ldr	r2, [r1, #12]
 132 0062 C2F34162 		ubfx	r2, r2, #25, #2
 133 0066 0132     		adds	r2, r2, #1
 134 0068 5200     		lsls	r2, r2, #1
 135              	.LVL8:
 244:Core/Src/system_stm32g4xx.c ****       break;
 136              		.loc 1 244 0
 137 006a B3FBF2F3 		udiv	r3, r3, r2
ARM GAS  /tmp/ccipKmXI.s 			page 8


 138              	.LVL9:
 139 006e 054A     		ldr	r2, .L13+8
 140              	.LVL10:
 141 0070 1360     		str	r3, [r2]
 245:Core/Src/system_stm32g4xx.c **** 
 142              		.loc 1 245 0
 143 0072 CFE7     		b	.L5
 144              	.LVL11:
 145              	.L12:
 236:Core/Src/system_stm32g4xx.c ****       }
 146              		.loc 1 236 0
 147 0074 044A     		ldr	r2, .L13+12
 148              	.LVL12:
 149 0076 B2FBF3F2 		udiv	r2, r2, r3
 150              	.LVL13:
 151 007a EBE7     		b	.L10
 152              	.L14:
 153              		.align	2
 154              	.L13:
 155 007c 00100240 		.word	1073876992
 156 0080 00000000 		.word	.LANCHOR1
 157 0084 00000000 		.word	.LANCHOR0
 158 0088 0024F400 		.word	16000000
 159 008c 00127A00 		.word	8000000
 160              		.cfi_endproc
 161              	.LFE133:
 163              		.global	APBPrescTable
 164              		.global	AHBPrescTable
 165              		.global	SystemCoreClock
 166              		.section	.data.SystemCoreClock,"aw",%progbits
 167              		.align	2
 168              		.set	.LANCHOR0,. + 0
 171              	SystemCoreClock:
 172 0000 0024F400 		.word	16000000
 173              		.section	.rodata.AHBPrescTable,"a",%progbits
 174              		.align	2
 175              		.set	.LANCHOR1,. + 0
 178              	AHBPrescTable:
 179 0000 00       		.byte	0
 180 0001 00       		.byte	0
 181 0002 00       		.byte	0
 182 0003 00       		.byte	0
 183 0004 00       		.byte	0
 184 0005 00       		.byte	0
 185 0006 00       		.byte	0
 186 0007 00       		.byte	0
 187 0008 01       		.byte	1
 188 0009 02       		.byte	2
 189 000a 03       		.byte	3
 190 000b 04       		.byte	4
 191 000c 06       		.byte	6
 192 000d 07       		.byte	7
 193 000e 08       		.byte	8
 194 000f 09       		.byte	9
 195              		.section	.rodata.APBPrescTable,"a",%progbits
 196              		.align	2
 199              	APBPrescTable:
ARM GAS  /tmp/ccipKmXI.s 			page 9


 200 0000 00       		.byte	0
 201 0001 00       		.byte	0
 202 0002 00       		.byte	0
 203 0003 00       		.byte	0
 204 0004 01       		.byte	1
 205 0005 02       		.byte	2
 206 0006 03       		.byte	3
 207 0007 04       		.byte	4
 208              		.text
 209              	.Letext0:
 210              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 211              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 212              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 213              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 214              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 215              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 216              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 217              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/ccipKmXI.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32g4xx.c
     /tmp/ccipKmXI.s:18     .text.SystemInit:0000000000000000 $t
     /tmp/ccipKmXI.s:25     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccipKmXI.s:45     .text.SystemInit:0000000000000018 $d
     /tmp/ccipKmXI.s:50     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccipKmXI.s:57     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccipKmXI.s:155    .text.SystemCoreClockUpdate:000000000000007c $d
     /tmp/ccipKmXI.s:199    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccipKmXI.s:178    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccipKmXI.s:171    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccipKmXI.s:167    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccipKmXI.s:174    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccipKmXI.s:196    .rodata.APBPrescTable:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
